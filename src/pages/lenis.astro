---
import { Image } from 'astro:assets';

import Layout from '@layouts/BaseLayout.astro';
import ParallaxImage from '@components/ParallaxImage.astro';

const meta = {
	title: 'Welcome to  an Astro Starter',
	description: 'The metadescription',
	imageOG: 'generic-social-1200x630.png',
	altOG: 'Alt text for OG image',
};

import TextA from '@components/Text.astro';
import Rule1 from '@components/Rule1.astro';
import image1 from '@images/panda-01.jpg';
---

<Layout metaData={meta}>
	<div class="parallax-container">
		<div class="parallax-element grida head" data-speed="0.3">
			<Image src={image1} layout="full-width" quality={40} alt="Lazy Cats" />
			<div>
				<h1 class="animate" id="animated-heading">
					<div class="line">
						<span>Pandas!</span>
					</div>
					<div class="line">
						<span>So Hyperactive!</span>
					</div>
				</h1>
			</div>
		</div>
	</div>
	<main class="wrapper flow">
		<h2>Hero Image With Scroll Timeline</h2>
		<p>
			<i> Image zooms automatically if the browser does not support scroll-timeline </i>
		</p>
		<p>
			Lorem, ipsum dolor sit amet consectetur adipisicing elit. Libero aut magnam laborum assumenda,
			odio, accusamus vero nisi impedit culpa incidunt deserunt, quo dolorem. Soluta accusamus
			natus, culpa iure nemo iste! Lorem ipsum dolor, sit amet consectetur adipisicing elit.
			Eligendi, id expedita! Ullam accusantium nisi quas tenetur cum id cumque vitae odit modi
			veniam. Alias, beatae itaque. Dignissimos ipsum officiis voluptas?
		</p>
		<p>
			Libero aut magnam laborum assumenda, odio, accusamus vero nisi impedit culpa incidunt
			deserunt, quo dolorem. Soluta accusamus natus, culpa iure nemo iste! Lorem ipsum dolor, sit
			amet consectetur adipisicing elit. Eligendi, id expedita! Ullam accusantium nisi quas tenetur
			cum id cumque vitae odit modi veniam. Alias, beatae itaque. Dignissimos ipsum officiis
			voluptas? Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit corporis
			perspiciatis sint illo ex repudiandae possimus eligendi recusandae explicabo at nisi itaque,
			libero vero hic quas numquam vel consectetur consequuntur! Lorem ipsum dolor sit, amet
			consectetur adipsum dolor sit amet consectetur adipisicing elit. Tenetur ad ab mollitia
			aperiam est autem facere laborum vero fuga dolores illum repudiandae esse minus, voluptates
			quam sint quisquam temporibus eveniet?
		</p>
		<ParallaxImage />
		<p>
			Libero aut magnam laborum assumenda, odio, accusamus vero nisi impedit culpa incidunt
			deserunt, quo dolorem. Soluta accusamus natus, culpa iure nemo iste! Lorem ipsum dolor, sit
			amet consectetur adipisicing elit. Eligendi, id expedita! Ullam accusantium nisi quas tenetur
			cum id cumque vitae odit modi veniam. Alias, beatae itaque. Dignissimos ipsum officiis
			voluptas? Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit corporis
			perspiciatis sint illo ex repudiandae possimus eligendi recusandae explicabo at nisi itaque,
			libero vero hic quas numquam vel consectetur consequuntur! Lorem ipsum dolor sit, amet
			consectetur adipsum dolor sit amet consectetur adipisicing elit. Tenetur ad ab mollitia
			aperiam est autem facere laborum vero fuga dolores illum repudiandae esse minus, voluptates
			quam sint quisquam temporibus eveniet?
		</p>
		<p>
			Libero aut magnam laborum assumenda, odio, accusamus vero nisi impedit culpa incidunt
			deserunt, quo dolorem. Soluta accusamus natus, culpa iure nemo iste! Lorem ipsum dolor, sit
			amet consectetur adipisicing elit. Eligendi, id expedita! Ullam accusantium nisi quas tenetur
			cum id cumque vitae odit modi veniam. Alias, beatae itaque. Dignissimos ipsum officiis
			voluptas? Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit corporis
			perspiciatis sint illo ex repudiandae possimus eligendi recusandae explicabo at nisi itaque,
			libero vero hic quas numquam vel consectetur consequuntur! Lorem ipsum dolor sit, amet
			consectetur adipsum dolor sit amet consectetur adipisicing elit. Tenetur ad ab mollitia
			aperiam est autem facere laborum vero fuga dolores illum repudiandae esse minus, voluptates
			quam sint quisquam temporibus eveniet?
		</p>
	</main>
</Layout>

<style>
	.parallax-container {
		position: relative;
		height: 70vh; /* Make it taller to see more parallax effect */
	}

	.parallax-element {
		position: absolute;
		will-change: transform;
		width: 100%;
		height: 70vh;
		img {
			height: 70vh;
		}
	}
	.grida {
		display: grid;
	}
	.head {
		grid-template-rows: 1;
		grid-template-columns: 1;
		grid-template-areas: 'main';
		img {
			grid-area: main;
		}
		div {
			grid-area: main;
			h1 {
				padding: var(--size-8);
				padding-top: calc(var(--size-8) * 10);
				color: var(--jungle-7);
				font-size: calc(var(--font-size-8) * 2);

				.line {
					display: block;
					overflow: hidden; /* Hide the text that's below baseline */

					/* Create inner element for the actual text */
					span {
						display: block;
						/* Initial state - text starts below, fully opaque */
						transform: translateY(100%);
						opacity: 1;
					}
				}
			}
		}
	}

	main {
		position: relative;
		/* Prevent some wierd shit from Saafari */
		transform: translateZ(0);
		z-index: 2;
		margin-top: 15px;
		outline: 15px hsla(37, 18%, 81%, 0.42) solid;
		border: 1px solid var(--stone-1);
		background: var(--stone-2);
		padding: var(--size-4);
		padding-block-start: var(--size-8);

		p,
		h2 {
			margin: auto;
			max-width: 65ch;
		}
	}
</style>

<script>
	import Lenis from 'lenis';
	import { animate, inView } from 'motion';

	let lenis: Lenis | null = null;

	function initLenis() {
		if (lenis) return lenis; // don't re-init

		lenis = new Lenis({
			duration: 1.2,
			easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
			syncTouch: true,
		});

		function raf(time: number) {
			lenis?.raf(time);
			requestAnimationFrame(raf);
		}

		requestAnimationFrame(raf);

		// Handle parallax elements
		lenis.on('scroll', ({ scroll }: { scroll: number }) => {
			const parallaxElements = document.querySelectorAll('[data-speed]');

			parallaxElements.forEach((element) => {
				const speed = parseFloat((element as HTMLElement).dataset.speed || '1');
				const yPos = scroll * speed;
				(element as HTMLElement).style.transform = `translateY(${yPos}px)`;
			});
		});

		return lenis;
	}

	function initAnimations() {
		const heading = document.getElementById('animated-heading');

		if (heading) {
			const lines = heading.querySelectorAll('.line span');

			// Use inView to trigger animation when heading becomes visible
			inView(heading, () => {
				// Animate each line's inner span separately with a stagger delay
				lines.forEach((span, index) => {
					animate(
						span,
						{
							transform: 'translateY(0%)',
						},
						{
							duration: 0.8,
							delay: index * 0.15, // Stagger each line by 150ms
							easing: [0.25, 0.1, 0.25, 1],
						}
					);
				});
			});
		}
	}

	function getLenis() {
		return lenis;
	}

	// Initialize everything when the component loads
	document.addEventListener('DOMContentLoaded', () => {
		initLenis();
		initAnimations();
	});

	// Clean up on page unload
	window.addEventListener('beforeunload', () => {
		lenis?.destroy();
		lenis = null;
	});
</script>
