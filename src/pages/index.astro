---
import { Image, Picture } from "astro:assets";

import Layout from "@layouts/BaseLayout.astro";

import image1 from "@images/panda-01.jpg";
const meta = {
  title: "Welcome to  an Astro Starter",
  description: "The metadescription",
  imageOG: "generic-social-1200x630.png",
  altOG: "Alt text for OG image",
};

import TextA from "@components/Text.astro";
import Rule1 from "@components/Rule1.astro";
import Skew from "@components/SkewZoom.astro";
---

<Layout metaData={meta}>
  <main class="wrapper flow">
    <h1>Start</h1>
    <a href="#" class="link-slide">Test Link</a>
    <a href="#" class="sliding-link">Test Link</a>

    <TextA />
    <Rule1 />
    <Skew />

    <h2>Check OG:Logo</h2>
    <p>
      Lorem, ipsum dolor sit amet consectetur adipisicing elit. Libero aut
      magnam laborum assumenda, odio, accusamus vero nisi impedit culpa incidunt
      deserunt, quo dolorem. Soluta accusamus natus, culpa iure nemo iste!
    </p>
    <ul>
      <li>Modern CSS</li>
      <li>CUBE CSS</li>
      <li>OG Meta</li>
      <li>Minimal Starter</li>
      <li>Experimental Edition</li>
      <li>Component library</li>
    </ul>
    <ul>
      <li>Experimental fonts</li>
      <li>Experimental responsive images</li>
    </ul>
    <ol>
      <li>Minimal Starter<br /></li>
      <li>Experimental Edition</li>
      <li>Components Edition</li>
    </ol>
    <h2>Image</h2>
    <Image src={image1} alt="" quality={50} class="" />

    <section class="grid" data-layout="50-50">
      <div class="">
        <h2>Grid 50-50</h2>
        <p>Number of columns is controlled by using attribute data-layout</p>
      </div>
      <div class="">
        <h2>Grid</h2>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Tenetur fuga
          libero labore impedit nam officia facere omnis ullam iure unde.
          Veritatis quidem error similique eum modi dicta eaque blanditiis
          voluptatem.
        </p>
      </div>
    </section>
    <section class="flow">
      <h2>Thirds Responsive Images</h2>
      <div class="grid" data-layout="thirds">
        <div>
          <p>Full width</p>
          <Image src={image1} alt="" quality={50} layout="full-width" />
        </div>
        <div>
          <p>Responsive Picture with multiple formats</p>
          <Picture
            src={image1}
            alt="X"
            quality={50}
            width={800}
            formats={["avif", "webp", "jpeg"]}
          />
        </div>
        <div>
          <p>Responsive 800 x 800</p>
          <Image src={image1} alt="" quality={50} width={800} height={800} />
        </div>
        <div>
          <p>Constrained</p>
          <Image
            src={image1}
            alt="X"
            quality={50}
            layout="constrained"
            width={1200}
          />
        </div>
      </div>
      <div class="grid" data-layout="thirds">
        <Picture
          src={image1}
          alt="X"
          quality={50}
          class="span-2"
          layout="full-width"
        />
        <Image src={image1} alt="" quality={50} />
      </div>
    </section>
  </main>
  <section>
    <h2>Image tests</h2>
    <p>Full-width picture</p>
    <Picture
      src={image1}
      alt="X"
      quality={50}
      layout="full-width"
      class="squircle"
    />
  </section>
  <section class="content-grid">
    <h2>Out of Main</h2>
    <p>Lorem</p>
  </section>
</Layout>
<style>
  .link-slide {
    font-size: 3rem;
    text-decoration: none;
    position: relative;
    display: inline-block;
    transition: color 0.3s ease;
  }
  .link-slide::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: #007bff;
    transition: width 0.3s ease;
  }
  ,
  .link-slide:hover::after {
    width: 100%;
  }
</style>
<style>
  /* Styling for the sliding link */
  .sliding-link {
    /* Define a CSS variable for the transition speed */
    --transition-speed: 1.3s;

    position: relative;
    display: inline-block; /* Essential for containing the pseudo-elements */
    color: #1a73e8; /* A nice blue color for the link */
    text-decoration: none; /* No underline by default */
    overflow: hidden; /* Hides the pseudo-elements until they slide into view */
    padding-bottom: 4px; /* Space for the underline */
    font-weight: 600;
    font-size: 1.25rem; /* Larger font size for better visibility */
    transition: color var(--transition-speed) ease-in-out; /* Smooth color transition on hover */
  }

  /* Pseudo-element for the underline */
  .sliding-link::before {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0; /* Always start at the left edge */
    width: 100%;
    height: 2px; /* Thickness of the underline */
    background-color: #1a73e8; /* Color of the underline */

    /* Default state: scaled to 0 from the right (invisible) */
    transform: scaleX(0);
    transform-origin: right;
    /* Transition for when hover is removed (scaling out) */
    transition: transform var(--transition-speed) ease-in;
  }

  /* When hovered:
     - Scale to 1 from the left (slide in from left)
     - Change transition for sliding in */
  .sliding-link:hover::before {
    transform: scaleX(1); /* Scale to full width */
    transform-origin: left; /* Scale from the left */
    /* Transition for when hovered (sliding in) */
    transition: transform var(--transition-speed) ease-out;
  }

  /* Optional: Change link color on hover for better feedback */
  .sliding-link:hover {
    color: #0d47a1; /* Slightly darker blue on hover */
  }
</style>
